{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\React p_2\\\\react_p2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n\n// import {RecordList} from './components/RecordList';\nimport ListingSection from './components/CalorieRecords-Section/ListingSection';\nimport CaloriesRecordEdit from './components/edit/CaloriesRecordEdit';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_RECORDS = [{\n  id: 1,\n  date: new Date(2023, 2, 1),\n  meal: \"Breakfast\",\n  content: 'Eggs',\n  calories: 111\n}, {\n  id: 2,\n  date: new Date(2023, 2, 2),\n  meal: \"Breakfast\",\n  content: 'Bas',\n  calories: -111\n}, {\n  id: 3,\n  date: new Date(2023, 2, 3),\n  meal: \"Breakfast\",\n  content: 'Milk',\n  calories: 333\n}, {\n  id: 4,\n  date: new Date(2023, 2, 4),\n  meal: \"Breakfast\",\n  content: 'Rice',\n  calories: 444\n}];\nfunction App() {\n  _s();\n  const [record, setRecords] = useState(INITIAL_RECORDS);\n  const [nextId, setNextId] = useState(5);\n  const formSubmitHandler = record => {\n    const formattedRecord = {\n      ...record,\n      date: new Date(record.date),\n      id: nextId\n    };\n    setNextId(lastVal => lastVal + 1);\n    setRecords(prevRecords => [formattedRecord, ...prevRecords]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to React with Almdrasa!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CaloriesRecordEdit, {\n      onFormSubmit: formSubmitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListingSection, {\n      allRecords: record\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xK6jxP+TzI7jb+JgJkzOw/Tv1Os=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ListingSection","CaloriesRecordEdit","useState","jsxDEV","_jsxDEV","INITIAL_RECORDS","id","date","Date","meal","content","calories","App","_s","record","setRecords","nextId","setNextId","formSubmitHandler","formattedRecord","lastVal","prevRecords","children","fileName","_jsxFileName","lineNumber","columnNumber","onFormSubmit","allRecords","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/React p_2/react_p2/src/App.js"],"sourcesContent":["import React from 'react';\n\n// import {RecordList} from './components/RecordList';\nimport ListingSection from './components/CalorieRecords-Section/ListingSection';\nimport CaloriesRecordEdit from './components/edit/CaloriesRecordEdit';\nimport { useState } from 'react';\n\nconst INITIAL_RECORDS = [{\n  id:1,\n  date: new Date(2023, 2, 1,),\n  meal: \"Breakfast\",\n  content: 'Eggs',\n  calories: 111,\n},\n{\n  id:2,\n  date: new Date(2023, 2, 2,),\n  meal: \"Breakfast\",\n  content: 'Bas',\n  calories: -111,\n},\n{\n  id:3,\n  date: new Date(2023, 2, 3,),\n  meal: \"Breakfast\",\n  content: 'Milk',\n  calories: 333,\n},\n{\n  id:4,\n  date: new Date(2023, 2, 4,),\n  meal: \"Breakfast\",\n  content: 'Rice',\n  calories: 444,\n},\n\n]\nfunction App() {\n  const [record, setRecords] = useState(INITIAL_RECORDS);\n  const [nextId, setNextId] = useState(5);\n\n  const formSubmitHandler = (record) => {\n    const formattedRecord = {\n      ...record,\n      date: new Date(record.date),\n      id:nextId,\n    };\n\n    setNextId((lastVal) => lastVal + 1);\n    setRecords((prevRecords) => [formattedRecord, ...prevRecords]);\n\n  }\n  return (\n    <div>\n      <h1>Welcome to React with Almdrasa!</h1>\n      <CaloriesRecordEdit onFormSubmit={formSubmitHandler} />\n      <ListingSection allRecords={record} />\n\n\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAOC,cAAc,MAAM,oDAAoD;AAC/E,OAAOC,kBAAkB,MAAM,sCAAsC;AACrE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,eAAe,GAAG,CAAC;EACvBC,EAAE,EAAC,CAAC;EACJC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAE,CAAC;EAC3BC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,MAAM;EACfC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAC,CAAC;EACJC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAE,CAAC;EAC3BC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE,CAAC;AACb,CAAC,EACD;EACEL,EAAE,EAAC,CAAC;EACJC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAE,CAAC;EAC3BC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,MAAM;EACfC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAC,CAAC;EACJC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAE,CAAC;EAC3BC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,MAAM;EACfC,QAAQ,EAAE;AACZ,CAAC,CAEA;AACD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAACG,eAAe,CAAC;EACtD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAMgB,iBAAiB,GAAIJ,MAAM,IAAK;IACpC,MAAMK,eAAe,GAAG;MACtB,GAAGL,MAAM;MACTP,IAAI,EAAE,IAAIC,IAAI,CAACM,MAAM,CAACP,IAAI,CAAC;MAC3BD,EAAE,EAACU;IACL,CAAC;IAEDC,SAAS,CAAEG,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC;IACnCL,UAAU,CAAEM,WAAW,IAAK,CAACF,eAAe,EAAE,GAAGE,WAAW,CAAC,CAAC;EAEhE,CAAC;EACD,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCtB,OAAA,CAACH,kBAAkB;MAAC0B,YAAY,EAAET;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDtB,OAAA,CAACJ,cAAc;MAAC4B,UAAU,EAAEd;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGnC,CAAC;AAEV;AAACb,EAAA,CAxBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}